#  development configuration (run using: docker-compose -f docker-compose.yml -f docker-compose.devel.yml up -d)
#  see: https://docs.docker.com/compose/extends/#example-use-case
#  
# -services store all data in data folder
# -map all service ports; rest API at port 10010
# -mounts source code from the host
#
# *Logs*
#    # TODO: some container logs are mounted to data/ directory, but some arent. This needs some cleanup.
#    By default logs are "json-file", and are written to: 
#    /var/lib/docker/containers/<container id>/<container id>-json.log
#    
#    You can use docker inspect to check this: 
#       docker inspect --format='{{.LogPath}}' $INSTANCE_ID
#       
#    *No maximum log sizes defined*
# 
version: '2'

services:
  mongodb:
    volumes: 
      - ./data/mongodb:/data/db # permanent storage on the host
    ports:
      - "27017:27017"
    command: "--smallfiles" # small files

  redis: 
    volumes:
      - ./data/redis/:/data # permanent storage on the host
    ports:
      - "6379:6379"

  influxdb: 
    volumes:
        - ./data/influxdb:/var/lib/influxdb # permanent storage on the host
    ports:
      - "8083:8083"
      - "8086:8086"
      - "25826:25826/udp"
    environment:
      - INFLUXDB_ADMIN_ENABLED=true

  grafana:
    build: grafana  # Builds the Dockerfile in grafana folder
    volumes:
      - ./data/grafana:/var/lib/grafana # permanent storage on the host

  mosquitto: 
    build: mosquitto # Builds the Dockerfile in mosquitto folder 
    volumes:
      - ./data/mosquitto/data:/var/lib/mosquitto # permanent storage on the host
      - ./data/mosquitto/log:/var/log/mosquitto # permanent storage on the host   
    ports:
      - "1883:1883"
      - "8883:8883"
      - "9001:9001"

  web: 
    image: openchirp/web  # Builds the Dockerfile in httpd folder
    volumes:
      - ./httpd/code:/openchirp
  
  rest: 
    build: node  # Builds the Dockerfile in node folder
    volumes:
      - ./node/code:/usr/src/app
      - /usr/src/app/node_modules
      - ./data/node/log:/logs

  seed-data:
    build: seed-data
    volumes:
      - ./data/tokens:/tokens  # Mount tokens to host machine so that service containers can read them.   

  mqtt-influx-storage-service:
    build: mqtt-influx-storage-service    # Builds the Dockerfile in mqtt-influx-storage-service folder
    volumes:
      - ./mqtt-influx-storage-service/code:/code
      - ./data/tokens:/tokens  # So that the service can read its token
    
  gpsmapper-service:
    build: gpsmapper-service    # Builds the Dockerfile in gpsmapper-service folder
    volumes:
      - ./data/tokens:/tokens # So that the service can read its token
     
